// Copyright Â© 2023 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "github.com/TheThingsIndustries/protoc-gen-go-json/annotations.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";
import "google/protobuf/timestamp.proto";

package ttn.lorawan.v3;

option go_package = "go.thethings.network/lorawan-stack/v3/pkg/ttnpb";

enum ALCSyncCommandIdentifier {
  option (thethings.json.enum) = { marshal_as_string: true, prefix: "CID" };

  CID_PKG_VERSION = 0;
  CID_APP_TIME = 1;
  CID_APP_DEV_TIME_PERIODICITY = 2;
  CID_FORCE_DEV_RESYNC = 3;
}

message ALCSyncCommand {
  ALCSyncCommandIdentifier cid = 1 [(validate.rules).enum = {defined_only: true}];

  oneof payload {
    AppTimeReq app_time_req = 2;
    AppTimeAns app_time_ans = 3;
  }

  message AppTimeReq {
    google.protobuf.Timestamp DeviceTime = 1 [(validate.rules).timestamp.required = true];
    uint32 TokenReq = 2 [(validate.rules).uint32.lte = 255];
    bool AnsRequired = 3;
  }

  message AppTimeAns {
    int32 TimeCorrection = 1;
    uint32 TokenAns = 2 [(validate.rules).uint32.lte = 255];
  }
}
